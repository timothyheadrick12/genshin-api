/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core, connectionPluginCore } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  FilterInputType: { // input type
    field: string; // String!
    int?: number | null; // Int
    ints?: Array<number | null> | null; // [Int]
    operator?: string | null; // String
    string?: string | null; // String
    strings?: Array<string | null> | null; // [String]
  }
  FilterLogicInputType: { // input type
    AND?: Array<NexusGenInputs['FilterInputType'] | null> | null; // [FilterInputType]
    NOT?: Array<NexusGenInputs['FilterInputType'] | null> | null; // [FilterInputType]
    OR?: Array<NexusGenInputs['FilterInputType'] | null> | null; // [FilterInputType]
  }
  SortInputType: { // input type
    asc: boolean; // Boolean!
    field: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Artifact: { // root type
    id: string; // ID!
    image?: string | null; // String
    images?: NexusGenRootTypes['ArtifactImages'] | null; // ArtifactImages
    max_rarity: number; // Int!
    name: string; // String!
    piece_bonus_1?: string | null; // String
    piece_bonus_2?: string | null; // String
    piece_bonus_4?: string | null; // String
  }
  ArtifactConnection: { // root type
    edges?: Array<NexusGenRootTypes['ArtifactEdge'] | null> | null; // [ArtifactEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  ArtifactEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Artifact'] | null; // Artifact
  }
  ArtifactImages: { // root type
    circlet_of_logos?: string | null; // String
    flower_of_life?: string | null; // String
    goblet_of_eonothem?: string | null; // String
    plume_of_death?: string | null; // String
    sands_of_eon?: string | null; // String
  }
  Character: { // root type
    affiliation: string; // String!
    birthday?: string | null; // String
    constellation: string; // String!
    constellations?: Array<NexusGenRootTypes['CharacterConstellation'] | null> | null; // [CharacterConstellation]
    description: string; // String!
    gender?: string | null; // String
    id: string; // ID!
    images?: NexusGenRootTypes['CharacterImages'] | null; // CharacterImages
    name: string; // String!
    nation: string; // String!
    outfits?: Array<NexusGenRootTypes['CharacterOutfit'] | null> | null; // [CharacterOutfit]
    passiveTalents?: Array<NexusGenRootTypes['CharacterPassiveTalent'] | null> | null; // [CharacterPassiveTalent]
    rarity: number; // Int!
    skillTalents?: Array<NexusGenRootTypes['CharacterSkillTalent'] | null> | null; // [CharacterSkillTalent]
    specialDish?: string | null; // String
    title?: string | null; // String
    vision: string; // String!
    vision_key: string; // String!
    weapon: string; // String!
    weapon_type: string; // String!
  }
  CharacterConnection: { // root type
    edges?: Array<NexusGenRootTypes['CharacterEdge'] | null> | null; // [CharacterEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  CharacterConstellation: { // root type
    description?: string | null; // String
    level?: number | null; // Int
    name?: string | null; // String
    unlock?: string | null; // String
  }
  CharacterEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Character'] | null; // Character
  }
  CharacterImages: { // root type
    card?: string | null; // String
    constellation?: string | null; // String
    constellation_1?: string | null; // String
    constellation_2?: string | null; // String
    constellation_3?: string | null; // String
    constellation_4?: string | null; // String
    constellation_5?: string | null; // String
    constellation_6?: string | null; // String
    gacha_card?: string | null; // String
    gacha_splash?: string | null; // String
    icon?: string | null; // String
    icon_big?: string | null; // String
    icon_big_aether?: string | null; // String
    icon_big_lumine?: string | null; // String
    outfit_opulent_splendor?: string | null; // String
    outfit_orchids_evening_gown?: string | null; // String
    outfit_sea_breeze_dandelion?: string | null; // String
    outfit_summertime_sparkle?: string | null; // String
    portrait?: string | null; // String
    portraitf?: string | null; // String
    portraitm?: string | null; // String
    talent_burst?: string | null; // String
    talent_na?: string | null; // String
    talent_passive_0?: string | null; // String
    talent_passive_1?: string | null; // String
    talent_passive_2?: string | null; // String
    talent_passive_misc?: string | null; // String
    talent_skill?: string | null; // String
  }
  CharacterOutfit: { // root type
    description?: string | null; // String
    image?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Int
    rarity?: number | null; // Int
    type?: string | null; // String
  }
  CharacterPassiveTalent: { // root type
    description?: string | null; // String
    level?: number | null; // Int
    name?: string | null; // String
    unlock?: string | null; // String
  }
  CharacterSkillTalent: { // root type
    description?: string | null; // String
    name?: string | null; // String
    type?: string | null; // String
    unlock?: string | null; // String
    upgrades?: Array<NexusGenRootTypes['CharacterSkillTalentUpgrade'] | null> | null; // [CharacterSkillTalentUpgrade]
  }
  CharacterSkillTalentUpgrade: { // root type
    name?: string | null; // String
    value?: string | null; // String
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Artifact: { // field return type
    id: string; // ID!
    image: string | null; // String
    images: NexusGenRootTypes['ArtifactImages'] | null; // ArtifactImages
    max_rarity: number; // Int!
    name: string; // String!
    piece_bonus_1: string | null; // String
    piece_bonus_2: string | null; // String
    piece_bonus_4: string | null; // String
  }
  ArtifactConnection: { // field return type
    edges: Array<NexusGenRootTypes['ArtifactEdge'] | null> | null; // [ArtifactEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  ArtifactEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Artifact'] | null; // Artifact
  }
  ArtifactImages: { // field return type
    circlet_of_logos: string | null; // String
    flower_of_life: string | null; // String
    goblet_of_eonothem: string | null; // String
    plume_of_death: string | null; // String
    sands_of_eon: string | null; // String
  }
  Character: { // field return type
    affiliation: string; // String!
    birthday: string | null; // String
    constellation: string; // String!
    constellations: Array<NexusGenRootTypes['CharacterConstellation'] | null> | null; // [CharacterConstellation]
    description: string; // String!
    gender: string | null; // String
    id: string; // ID!
    images: NexusGenRootTypes['CharacterImages'] | null; // CharacterImages
    name: string; // String!
    nation: string; // String!
    outfits: Array<NexusGenRootTypes['CharacterOutfit'] | null> | null; // [CharacterOutfit]
    passiveTalents: Array<NexusGenRootTypes['CharacterPassiveTalent'] | null> | null; // [CharacterPassiveTalent]
    rarity: number; // Int!
    skillTalents: Array<NexusGenRootTypes['CharacterSkillTalent'] | null> | null; // [CharacterSkillTalent]
    specialDish: string | null; // String
    title: string | null; // String
    vision: string; // String!
    vision_key: string; // String!
    weapon: string; // String!
    weapon_type: string; // String!
  }
  CharacterConnection: { // field return type
    edges: Array<NexusGenRootTypes['CharacterEdge'] | null> | null; // [CharacterEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  CharacterConstellation: { // field return type
    description: string | null; // String
    level: number | null; // Int
    name: string | null; // String
    unlock: string | null; // String
  }
  CharacterEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Character'] | null; // Character
  }
  CharacterImages: { // field return type
    card: string | null; // String
    constellation: string | null; // String
    constellation_1: string | null; // String
    constellation_2: string | null; // String
    constellation_3: string | null; // String
    constellation_4: string | null; // String
    constellation_5: string | null; // String
    constellation_6: string | null; // String
    gacha_card: string | null; // String
    gacha_splash: string | null; // String
    icon: string | null; // String
    icon_big: string | null; // String
    icon_big_aether: string | null; // String
    icon_big_lumine: string | null; // String
    outfit_opulent_splendor: string | null; // String
    outfit_orchids_evening_gown: string | null; // String
    outfit_sea_breeze_dandelion: string | null; // String
    outfit_summertime_sparkle: string | null; // String
    portrait: string | null; // String
    portraitf: string | null; // String
    portraitm: string | null; // String
    talent_burst: string | null; // String
    talent_na: string | null; // String
    talent_passive_0: string | null; // String
    talent_passive_1: string | null; // String
    talent_passive_2: string | null; // String
    talent_passive_misc: string | null; // String
    talent_skill: string | null; // String
  }
  CharacterOutfit: { // field return type
    description: string | null; // String
    image: string | null; // String
    name: string | null; // String
    price: number | null; // Int
    rarity: number | null; // Int
    type: string | null; // String
  }
  CharacterPassiveTalent: { // field return type
    description: string | null; // String
    level: number | null; // Int
    name: string | null; // String
    unlock: string | null; // String
  }
  CharacterSkillTalent: { // field return type
    description: string | null; // String
    name: string | null; // String
    type: string | null; // String
    unlock: string | null; // String
    upgrades: Array<NexusGenRootTypes['CharacterSkillTalentUpgrade'] | null> | null; // [CharacterSkillTalentUpgrade]
  }
  CharacterSkillTalentUpgrade: { // field return type
    name: string | null; // String
    value: string | null; // String
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    artifact: NexusGenRootTypes['Artifact'] | null; // Artifact
    artifacts: NexusGenRootTypes['ArtifactConnection'] | null; // ArtifactConnection
    character: NexusGenRootTypes['Character'] | null; // Character
    characters: NexusGenRootTypes['CharacterConnection'] | null; // CharacterConnection
  }
}

export interface NexusGenFieldTypeNames {
  Artifact: { // field return type name
    id: 'ID'
    image: 'String'
    images: 'ArtifactImages'
    max_rarity: 'Int'
    name: 'String'
    piece_bonus_1: 'String'
    piece_bonus_2: 'String'
    piece_bonus_4: 'String'
  }
  ArtifactConnection: { // field return type name
    edges: 'ArtifactEdge'
    pageInfo: 'PageInfo'
  }
  ArtifactEdge: { // field return type name
    cursor: 'String'
    node: 'Artifact'
  }
  ArtifactImages: { // field return type name
    circlet_of_logos: 'String'
    flower_of_life: 'String'
    goblet_of_eonothem: 'String'
    plume_of_death: 'String'
    sands_of_eon: 'String'
  }
  Character: { // field return type name
    affiliation: 'String'
    birthday: 'String'
    constellation: 'String'
    constellations: 'CharacterConstellation'
    description: 'String'
    gender: 'String'
    id: 'ID'
    images: 'CharacterImages'
    name: 'String'
    nation: 'String'
    outfits: 'CharacterOutfit'
    passiveTalents: 'CharacterPassiveTalent'
    rarity: 'Int'
    skillTalents: 'CharacterSkillTalent'
    specialDish: 'String'
    title: 'String'
    vision: 'String'
    vision_key: 'String'
    weapon: 'String'
    weapon_type: 'String'
  }
  CharacterConnection: { // field return type name
    edges: 'CharacterEdge'
    pageInfo: 'PageInfo'
  }
  CharacterConstellation: { // field return type name
    description: 'String'
    level: 'Int'
    name: 'String'
    unlock: 'String'
  }
  CharacterEdge: { // field return type name
    cursor: 'String'
    node: 'Character'
  }
  CharacterImages: { // field return type name
    card: 'String'
    constellation: 'String'
    constellation_1: 'String'
    constellation_2: 'String'
    constellation_3: 'String'
    constellation_4: 'String'
    constellation_5: 'String'
    constellation_6: 'String'
    gacha_card: 'String'
    gacha_splash: 'String'
    icon: 'String'
    icon_big: 'String'
    icon_big_aether: 'String'
    icon_big_lumine: 'String'
    outfit_opulent_splendor: 'String'
    outfit_orchids_evening_gown: 'String'
    outfit_sea_breeze_dandelion: 'String'
    outfit_summertime_sparkle: 'String'
    portrait: 'String'
    portraitf: 'String'
    portraitm: 'String'
    talent_burst: 'String'
    talent_na: 'String'
    talent_passive_0: 'String'
    talent_passive_1: 'String'
    talent_passive_2: 'String'
    talent_passive_misc: 'String'
    talent_skill: 'String'
  }
  CharacterOutfit: { // field return type name
    description: 'String'
    image: 'String'
    name: 'String'
    price: 'Int'
    rarity: 'Int'
    type: 'String'
  }
  CharacterPassiveTalent: { // field return type name
    description: 'String'
    level: 'Int'
    name: 'String'
    unlock: 'String'
  }
  CharacterSkillTalent: { // field return type name
    description: 'String'
    name: 'String'
    type: 'String'
    unlock: 'String'
    upgrades: 'CharacterSkillTalentUpgrade'
  }
  CharacterSkillTalentUpgrade: { // field return type name
    name: 'String'
    value: 'String'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    artifact: 'Artifact'
    artifacts: 'ArtifactConnection'
    character: 'Character'
    characters: 'CharacterConnection'
  }
}

export interface NexusGenArgTypes {
  Query: {
    artifact: { // args
      filter?: NexusGenInputs['FilterInputType'] | null; // FilterInputType
      lFilter?: NexusGenInputs['FilterLogicInputType'] | null; // FilterLogicInputType
      sort?: NexusGenInputs['SortInputType'] | null; // SortInputType
    }
    artifacts: { // args
      after?: string | null; // String
      before?: string | null; // String
      filter?: NexusGenInputs['FilterInputType'] | null; // FilterInputType
      first?: number | null; // Int
      lFilter?: NexusGenInputs['FilterLogicInputType'] | null; // FilterLogicInputType
      last?: number | null; // Int
      sort?: NexusGenInputs['SortInputType'] | null; // SortInputType
    }
    character: { // args
      filter?: NexusGenInputs['FilterInputType'] | null; // FilterInputType
      lFilter?: NexusGenInputs['FilterLogicInputType'] | null; // FilterLogicInputType
      sort?: NexusGenInputs['SortInputType'] | null; // SortInputType
    }
    characters: { // args
      after?: string | null; // String
      before?: string | null; // String
      filter?: NexusGenInputs['FilterInputType'] | null; // FilterInputType
      first?: number | null; // Int
      lFilter?: NexusGenInputs['FilterLogicInputType'] | null; // FilterLogicInputType
      last?: number | null; // Int
      sort?: NexusGenInputs['SortInputType'] | null; // SortInputType
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}